
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20141204 (SVN rev 60)
//----------------------------------------------------

package cup.example;

import java_cup.runtime.*;
import cup.example.Lexer;
import java.io.IOException;
import java.io.File;
import java.io.FileInputStream;
import java_cup.runtime.ComplexSymbolFactory.Location;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20141204 (SVN rev 60) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  public Parser() {super();}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u022b\000\002\003\003\000\002\002\004\000\002\004" +
    "\007\000\002\004\005\000\002\004\003\000\002\006\003" +
    "\000\002\006\004\000\002\007\004\000\002\010\003\000" +
    "\002\010\004\000\002\011\003\000\002\011\004\000\002" +
    "\012\004\000\002\012\004\000\002\013\003\000\002\013" +
    "\003\000\002\013\004\000\002\014\003\000\002\014\004" +
    "\000\002\014\004\000\002\015\003\000\002\015\004\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\017\003\000\002\017\004\000\002\020\006\000\002\020" +
    "\004\000\002\020\004\000\002\021\003\000\002\021\004" +
    "\000\002\022\003\000\002\022\004\000\002\023\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\024\003\000\002\024\003\000\002\025\003\000\002\025" +
    "\003\000\002\026\003\000\002\027\003\000\002\027\003" +
    "\000\002\027\003\000\002\027\003\000\002\030\003\000" +
    "\002\030\005\000\002\030\004\000\002\031\004\000\002" +
    "\031\005\000\002\033\003\000\002\033\006\000\002\033" +
    "\012\000\002\033\011\000\002\033\007\000\002\033\006" +
    "\000\002\033\005\000\002\033\005\000\002\033\005\000" +
    "\002\033\005\000\002\033\004\000\002\033\004\000\002" +
    "\033\011\000\002\033\011\000\002\033\011\000\002\033" +
    "\011\000\002\033\004\000\002\311\002\000\002\311\003" +
    "\000\002\034\003\000\002\034\005\000\002\035\003\000" +
    "\002\035\004\000\002\035\004\000\002\035\004\000\002" +
    "\035\005\000\002\035\004\000\002\035\004\000\002\035" +
    "\004\000\002\035\004\000\002\035\004\000\002\035\003" +
    "\000\002\035\004\000\002\035\003\000\002\035\004\000" +
    "\002\036\004\000\002\037\005\000\002\037\006\000\002" +
    "\037\004\000\002\037\006\000\002\040\004\000\002\040" +
    "\004\000\002\040\004\000\002\041\004\000\002\041\003" +
    "\000\002\042\005\000\002\042\006\000\002\307\002\000" +
    "\002\307\005\000\002\043\003\000\002\043\004\000\002" +
    "\044\003\000\002\044\005\000\002\044\005\000\002\045" +
    "\003\000\002\045\005\000\002\045\005\000\002\045\005" +
    "\000\002\046\003\000\002\046\005\000\002\046\005\000" +
    "\002\173\003\000\002\173\005\000\002\173\005\000\002" +
    "\174\003\000\002\174\005\000\002\174\005\000\002\174" +
    "\005\000\002\174\005\000\002\051\003\000\002\051\005" +
    "\000\002\051\005\000\002\052\003\000\002\052\005\000" +
    "\002\053\003\000\002\053\005\000\002\054\003\000\002" +
    "\054\005\000\002\055\003\000\002\055\005\000\002\056" +
    "\003\000\002\056\005\000\002\057\003\000\002\057\007" +
    "\000\002\060\003\000\002\060\005\000\002\060\005\000" +
    "\002\060\003\000\002\061\003\000\002\061\003\000\002" +
    "\061\003\000\002\061\003\000\002\061\003\000\002\061" +
    "\003\000\002\061\003\000\002\061\003\000\002\061\003" +
    "\000\002\061\003\000\002\061\003\000\002\312\002\000" +
    "\002\312\003\000\002\062\003\000\002\062\005\000\002" +
    "\063\003\000\002\064\003\000\002\064\005\000\002\064" +
    "\005\000\002\064\005\000\002\065\003\000\002\065\005" +
    "\000\002\065\005\000\002\066\003\000\002\066\005\000" +
    "\002\067\003\000\002\067\005\000\002\070\003\000\002" +
    "\070\005\000\002\071\003\000\002\071\005\000\002\072" +
    "\003\000\002\072\005\000\002\073\003\000\002\073\007" +
    "\000\002\074\003\000\002\074\005\000\002\074\003\000" +
    "\002\075\003\000\002\075\005\000\002\076\003\000\002" +
    "\076\005\000\002\077\004\000\002\100\003\000\002\100" +
    "\005\000\002\100\004\000\002\101\003\000\002\101\003" +
    "\000\002\101\003\000\002\101\003\000\002\102\003\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\103\005\000\002\103\006\000\002\103\005\000\002\104" +
    "\005\000\002\104\011\000\002\313\002\000\002\313\004" +
    "\000\002\313\010\000\002\105\007\000\002\105\011\000" +
    "\002\105\007\000\002\314\002\000\002\314\003\000\002" +
    "\106\003\000\002\107\007\000\002\107\011\000\002\107" +
    "\012\000\002\110\003\000\002\111\004\000\002\111\004" +
    "\000\002\111\005\000\002\111\005\000\002\112\003\000" +
    "\002\113\006\000\002\113\013\000\002\315\002\000\002" +
    "\315\005\000\002\315\011\000\002\114\004\000\002\115" +
    "\003\000\002\115\005\000\002\115\004\000\002\116\003" +
    "\000\002\116\003\000\002\116\003\000\002\116\003\000" +
    "\002\116\003\000\002\117\003\000\002\117\003\000\002" +
    "\117\004\000\002\120\003\000\002\120\003\000\002\121" +
    "\003\000\002\121\003\000\002\121\003\000\002\121\003" +
    "\000\002\121\004\000\002\122\003\000\002\122\004\000" +
    "\002\122\004\000\002\122\004\000\002\321\003\000\002" +
    "\321\004\000\002\321\004\000\002\123\003\000\002\123" +
    "\004\000\002\124\003\000\002\124\003\000\002\124\004" +
    "\000\002\322\003\000\002\322\004\000\002\125\003\000" +
    "\002\125\004\000\002\323\003\000\002\323\003\000\002" +
    "\323\004\000\002\126\003\000\002\126\004\000\002\126" +
    "\003\000\002\127\004\000\002\127\005\000\002\127\004" +
    "\000\002\130\003\000\002\130\003\000\002\130\003\000" +
    "\002\130\003\000\002\130\003\000\002\131\003\000\002" +
    "\132\003\000\002\132\004\000\002\133\003\000\002\133" +
    "\003\000\002\133\003\000\002\133\003\000\002\133\003" +
    "\000\002\134\003\000\002\134\003\000\002\134\003\000" +
    "\002\135\003\000\002\135\003\000\002\135\003\000\002" +
    "\136\003\000\002\136\003\000\002\136\003\000\002\136" +
    "\004\000\002\137\003\000\002\137\003\000\002\140\003" +
    "\000\002\140\003\000\002\140\003\000\002\140\003\000" +
    "\002\140\003\000\002\140\003\000\002\140\003\000\002" +
    "\140\003\000\002\140\003\000\002\140\003\000\002\141" +
    "\003\000\002\141\003\000\002\141\004\000\002\142\004" +
    "\000\002\143\005\000\002\143\004\000\002\144\004\000" +
    "\002\144\005\000\002\144\006\000\002\145\003\000\002" +
    "\145\005\000\002\146\003\000\002\146\005\000\002\147" +
    "\002\000\002\147\005\000\002\150\003\000\002\150\005" +
    "\000\002\151\004\000\002\152\003\000\002\152\005\000" +
    "\002\153\003\000\002\154\005\000\002\154\004\000\002" +
    "\155\007\000\002\156\005\000\002\156\006\000\002\157" +
    "\006\000\002\160\007\000\002\161\005\000\002\161\005" +
    "\000\002\162\005\000\002\162\005\000\002\163\003\000" +
    "\002\164\003\000\002\164\004\000\002\165\003\000\002" +
    "\165\004\000\002\166\003\000\002\166\003\000\002\166" +
    "\004\000\002\167\003\000\002\167\004\000\002\310\002" +
    "\000\002\310\004\000\002\316\002\000\002\316\004\000" +
    "\002\170\003\000\002\170\003\000\002\171\004\000\002" +
    "\171\004\000\002\317\002\000\002\317\004\000\002\317" +
    "\003\000\002\320\002\000\002\320\003\000\002\172\004" +
    "\000\002\172\005\000\002\172\006\000\002\175\004\000" +
    "\002\175\005\000\002\176\005\000\002\177\002\000\002" +
    "\177\003\000\002\177\004\000\002\200\003\000\002\200" +
    "\005\000\002\201\003\000\002\201\005\000\002\202\003" +
    "\000\002\202\004\000\002\202\005\000\002\203\003\000" +
    "\002\203\005\000\002\203\003\000\002\204\003\000\002" +
    "\204\003\000\002\204\004\000\002\205\003\000\002\205" +
    "\003\000\002\205\005\000\002\205\004\000\002\206\003" +
    "\000\002\206\004\000\002\206\005\000\002\207\003\000" +
    "\002\207\003\000\002\210\004\000\002\210\004\000\002" +
    "\210\004\000\002\211\004\000\002\211\004\000\002\211" +
    "\004\000\002\212\003\000\002\212\005\000\002\213\005" +
    "\000\002\214\004\000\002\215\003\000\002\216\003\000" +
    "\002\216\003\000\002\217\005\000\002\217\006\000\002" +
    "\217\004\000\002\217\010\000\002\217\012\000\002\220" +
    "\003\000\002\220\005\000\002\221\004\000\002\222\003" +
    "\000\002\222\005\000\002\222\004\000\002\223\003\000" +
    "\002\226\003\000\002\226\003\000\002\226\003\000\002" +
    "\224\004\000\002\224\006\000\002\225\007\000\002\225" +
    "\006\000\002\225\005\000\002\225\004\000\002\227\005" +
    "\000\002\227\012\000\002\325\002\000\002\325\005\000" +
    "\002\325\011\000\002\230\004\000\002\231\003\000\002" +
    "\231\005\000\002\231\004\000\002\232\003\000\002\232" +
    "\003\000\002\232\003\000\002\232\003\000\002\232\003" +
    "\000\002\233\003\000\002\233\004\000\002\233\004\000" +
    "\002\233\004\000\002\233\004\000\002\234\005\000\002" +
    "\234\005\000\002\234\005\000\002\235\003\000\002\235" +
    "\003\000\002\236\004\000\002\237\005\000\002\237\004" +
    "\000\002\240\003\000\002\240\007\000\002\241\003\000" +
    "\002\241\005\000\002\242\003\000\002\242\005\000\002" +
    "\243\003\000\002\243\004\000\002\243\004\000\002\244" +
    "\003\000\002\244\003\000\002\244\003\000\002\245\004" +
    "\000\002\246\004\000\002\246\004\000\002\324\002\000" +
    "\002\324\003\000\002\247\004\000\002\247\006\000\002" +
    "\250\003\000\002\250\004\000\002\251\004\000\002\251" +
    "\006\000\002\252\006\000\002\253\003\000\002\254\004" +
    "\000\002\255\003\000\002\255\003\000\002\255\003\000" +
    "\002\255\003\000\002\255\003\000\002\255\003\000\002" +
    "\255\003\000\002\255\003\000\002\255\003\000\002\255" +
    "\003\000\002\255\003\000\002\255\003\000\002\255\003" +
    "\000\002\255\003\000\002\255\003\000\002\255\003\000" +
    "\002\255\003\000\002\255\003\000\002\255\003\000\002" +
    "\255\003\000\002\255\003\000\002\255\003\000\002\255" +
    "\003\000\002\255\003\000\002\255\003\000\002\255\003" +
    "\000\002\255\003\000\002\255\003\000\002\255\003\000" +
    "\002\255\003\000\002\255\003\000\002\255\003\000\002" +
    "\255\003\000\002\255\003\000\002\255\003\000\002\255" +
    "\003\000\002\255\003\000\002\255\003\000\002\255\004" +
    "\000\002\255\004\000\002\256\004\000\002\256\004\000" +
    "\002\257\006\000\002\260\003\000\002\260\005\000\002" +
    "\261\003\000\002\261\005\000\002\261\003\000\002\261" +
    "\005\000\002\261\003\000\002\261\004\000\002\262\003" +
    "\000\002\262\003\000\002\263\004\000\002\263\005\000" +
    "\002\264\007\000\002\264\004\000\002\265\003\000\002" +
    "\265\005\000\002\266\003\000\002\267\006\000\002\270" +
    "\005\000\002\271\003\000\002\271\004\000\002\272\007" +
    "\000\002\273\003\000\002\274\003\000\002\274\004\000" +
    "\002\275\003\000\002\275\004\000\002\276\005\000\002" +
    "\276\006\000\002\277\003\000\002\277\005\000\002\300" +
    "\003\000\002\301\002\000\002\302\002\000\002\303\002" +
    "\000\002\304\002\000\002\305\002\000\002\306\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\004\000\004\113\005\001\002\000\004\002\006\001" +
    "\002\000\004\002\001\001\002\000\004\002\000\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\004\000\004\003\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
//@@CUPDBG1

  ComplexSymbolFactory f = new ComplexSymbolFactory();
  symbolFactory = f;
  File file = new File("input.txt");
  FileInputStream fis = null;
  try {
    fis = new FileInputStream(file);
  } catch (IOException e) {
    e.printStackTrace();
  } 
  lexer = new Lexer(f,fis);

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
//@@CUPDBG2
	return lexer.next_token(); 
    }

//@@CUPDBG0

  protected Lexer lexer;


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parser$actions {
  private final Parser parser;

  /** Constructor */
  CUP$Parser$actions(Parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action_part00000000(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // identifier ::= IDENT 
            {
              Object RESULT =null;
		//@@CUPDBG3

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("identifier",1, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= identifier EOF 
            {
              Object RESULT =null;
		Location start_valxleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).xleft;
		Location start_valxright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)).xright;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parser$stack.elementAt(CUP$Parser$top-1)).value;
		RESULT = start_val;
              CUP$Parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parser$parser.done_parsing();
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // id ::= identifier SMALLERTHAN PLUS template_argument_list GREATERTHAN 
            {
              Object RESULT =null;
		//@@CUPDBG4

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("id",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // id ::= identifier SMALLERTHAN MINUS 
            {
              Object RESULT =null;
		//@@CUPDBG5

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("id",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // id ::= template_id 
            {
              Object RESULT =null;
		//@@CUPDBG6

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("id",2, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // global_scope ::= SCOPE 
            {
              Object RESULT =null;
		//@@CUPDBG7

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("global_scope",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // global_scope ::= TEMPLATE global_scope 
            {
              Object RESULT =null;
		//@@CUPDBG8

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("global_scope",4, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // id_scope ::= id SCOPE 
            {
              Object RESULT =null;
		//@@CUPDBG9

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("id_scope",5, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // nested_id ::= id 
            {
              Object RESULT =null;
		//@@CUPDBG10

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_id",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // nested_id ::= id_scope nested_id 
            {
              Object RESULT =null;
		//@@CUPDBG11

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_id",6, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // scoped_id ::= nested_id 
            {
              Object RESULT =null;
		//@@CUPDBG12

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("scoped_id",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // scoped_id ::= global_scope nested_id 
            {
              Object RESULT =null;
		//@@CUPDBG13

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("scoped_id",7, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // destructor_id ::= SQUIGLY id 
            {
              Object RESULT =null;
		//@@CUPDBG14

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("destructor_id",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // destructor_id ::= TEMPLATE destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG15

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("destructor_id",8, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // special_function_id ::= conversion_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG16

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("special_function_id",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // special_function_id ::= operator_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG17

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("special_function_id",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // special_function_id ::= TEMPLATE special_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG18

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("special_function_id",9, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // nested_special_function_id ::= special_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG19

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_special_function_id",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // nested_special_function_id ::= id_scope destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG20

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_special_function_id",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // nested_special_function_id ::= id_scope nested_special_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG21

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_special_function_id",10, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // scoped_special_function_id ::= nested_special_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG22

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("scoped_special_function_id",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // scoped_special_function_id ::= global_scope nested_special_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG23

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("scoped_special_function_id",11, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // declarator_id ::= scoped_id 
            {
              Object RESULT =null;
		//@@CUPDBG24

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declarator_id",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // declarator_id ::= scoped_special_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG25

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declarator_id",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // declarator_id ::= destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG26

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declarator_id",12, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // built_in_type_id ::= built_in_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG27

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_id",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // built_in_type_id ::= built_in_type_id built_in_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG28

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_id",13, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // pseudo_destructor_id ::= built_in_type_id SCOPE SQUIGLY built_in_type_id 
            {
              Object RESULT =null;
		//@@CUPDBG29

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("pseudo_destructor_id",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // pseudo_destructor_id ::= SQUIGLY built_in_type_id 
            {
              Object RESULT =null;
		//@@CUPDBG30

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("pseudo_destructor_id",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // pseudo_destructor_id ::= TEMPLATE pseudo_destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG31

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("pseudo_destructor_id",14, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // nested_pseudo_destructor_id ::= pseudo_destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG32

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_pseudo_destructor_id",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // nested_pseudo_destructor_id ::= id_scope nested_pseudo_destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG33

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_pseudo_destructor_id",15, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // scoped_pseudo_destructor_id ::= nested_pseudo_destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG34

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("scoped_pseudo_destructor_id",16, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // scoped_pseudo_destructor_id ::= global_scope scoped_pseudo_destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG35

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("scoped_pseudo_destructor_id",16, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // string ::= STRNG 
            {
              Object RESULT =null;
		//@@CUPDBG36

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("string",17, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // literal ::= INT 
            {
              Object RESULT =null;
		//@@CUPDBG37

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("literal",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // literal ::= CHARACTER 
            {
              Object RESULT =null;
		//@@CUPDBG38

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("literal",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // literal ::= FLOAT 
            {
              Object RESULT =null;
		//@@CUPDBG39

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("literal",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // literal ::= string 
            {
              Object RESULT =null;
		//@@CUPDBG40

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("literal",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // literal ::= boolean_literal 
            {
              Object RESULT =null;
		//@@CUPDBG41

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("literal",18, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // boolean_literal ::= FALSE 
            {
              Object RESULT =null;
		//@@CUPDBG42

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("boolean_literal",19, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // boolean_literal ::= TRUE 
            {
              Object RESULT =null;
		//@@CUPDBG43

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("boolean_literal",19, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // translation_unit ::= declaration_seq_opt 
            {
              Object RESULT =null;
		//@@CUPDBG44

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("translation_unit",20, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // primary_expression ::= literal 
            {
              Object RESULT =null;
		//@@CUPDBG45

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("primary_expression",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // primary_expression ::= THIS 
            {
              Object RESULT =null;
		//@@CUPDBG46

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("primary_expression",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // primary_expression ::= suffix_decl_specified_ids 
            {
              Object RESULT =null;
		//@@CUPDBG47

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("primary_expression",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // primary_expression ::= abstract_expression 
            {
              Object RESULT =null;
		//@@CUPDBG48

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("primary_expression",21, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // abstract_expression ::= parenthesis_clause 
            {
              Object RESULT =null;
		//@@CUPDBG49

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_expression",22, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // abstract_expression ::= SQLPAREN expression_opt SQRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG50

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_expression",22, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // abstract_expression ::= TEMPLATE abstract_expression 
            {
              Object RESULT =null;
		//@@CUPDBG51

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_expression",22, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // type1_parameters ::= parameter_declaration_list SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG52

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type1_parameters",23, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // type1_parameters ::= type1_parameters parameter_declaration_list SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG53

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type1_parameters",23, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // postfix_expression ::= primary_expression 
            {
              Object RESULT =null;
		//@@CUPDBG54

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // postfix_expression ::= postfix_expression parenthesis_clause mark_type1 MINUS 
            {
              Object RESULT =null;
		//@@CUPDBG55

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // postfix_expression ::= postfix_expression parenthesis_clause mark_type1 PLUS type1_parameters mark CLPAREN error 
            {
              Object RESULT =null;
		//@@CUPDBG56

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // postfix_expression ::= postfix_expression parenthesis_clause mark_type1 PLUS type1_parameters mark error 
            {
              Object RESULT =null;
		//@@CUPDBG57

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // postfix_expression ::= postfix_expression parenthesis_clause mark_type1 PLUS error 
            {
              Object RESULT =null;
		//@@CUPDBG58

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // postfix_expression ::= postfix_expression SQLPAREN expression SQRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG59

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // postfix_expression ::= postfix_expression DOT declarator_id 
            {
              Object RESULT =null;
		//@@CUPDBG60

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // postfix_expression ::= postfix_expression DOT scoped_pseudo_destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG61

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // postfix_expression ::= postfix_expression ARROW declarator_id 
            {
              Object RESULT =null;
		//@@CUPDBG62

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // postfix_expression ::= postfix_expression ARROW scoped_pseudo_destructor_id 
            {
              Object RESULT =null;
		//@@CUPDBG63

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // postfix_expression ::= postfix_expression INC 
            {
              Object RESULT =null;
		//@@CUPDBG64

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // postfix_expression ::= postfix_expression DEC 
            {
              Object RESULT =null;
		//@@CUPDBG65

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // postfix_expression ::= DYNAMICCAST SMALLERTHAN type_id GREATERTHAN LPAREN expression RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG66

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // postfix_expression ::= STATICCAST SMALLERTHAN type_id GREATERTHAN LPAREN expression RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG67

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // postfix_expression ::= REINTERPRETCAST SMALLERTHAN type_id GREATERTHAN LPAREN expression RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG68

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // postfix_expression ::= CONSTCAST SMALLERTHAN type_id GREATERTHAN LPAREN expression RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG69

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // postfix_expression ::= TYPEID parameters_clause 
            {
              Object RESULT =null;
		//@@CUPDBG70

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("postfix_expression",25, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // expression_list_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expression_list_opt",199, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // expression_list_opt ::= expression_list 
            {
              Object RESULT =null;
		//@@CUPDBG71

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expression_list_opt",199, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // expression_list ::= assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG72

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expression_list",26, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // expression_list ::= expression_list COMMA assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG73

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expression_list",26, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // unary_expression ::= postfix_expression 
            {
              Object RESULT =null;
		//@@CUPDBG74

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // unary_expression ::= INC cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG75

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // unary_expression ::= DEC cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG76

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // unary_expression ::= ptr_operator cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG77

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // unary_expression ::= suffix_decl_specified_scope star_ptr_operator cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG78

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // unary_expression ::= PLUS cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG79

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // unary_expression ::= MINUS cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG80

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // unary_expression ::= ESC cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG81

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // unary_expression ::= SQUIGLY cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG82

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // unary_expression ::= SIZEOF unary_expression 
            {
              Object RESULT =null;
		//@@CUPDBG83

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // unary_expression ::= new_expression 
            {
              Object RESULT =null;
		//@@CUPDBG84

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // unary_expression ::= global_scope new_expression 
            {
              Object RESULT =null;
		//@@CUPDBG85

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // unary_expression ::= delete_expression 
            {
              Object RESULT =null;
		//@@CUPDBG86

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // unary_expression ::= global_scope delete_expression 
            {
              Object RESULT =null;
		//@@CUPDBG87

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("unary_expression",27, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // delete_expression ::= DELETE cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG88

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("delete_expression",28, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // new_expression ::= NEW new_type_id new_initializer_opt 
            {
              Object RESULT =null;
		//@@CUPDBG89

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_expression",29, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // new_expression ::= NEW parameters_clause new_type_id new_initializer_opt 
            {
              Object RESULT =null;
		//@@CUPDBG90

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_expression",29, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // new_expression ::= NEW parameters_clause 
            {
              Object RESULT =null;
		//@@CUPDBG91

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_expression",29, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // new_expression ::= NEW parameters_clause parameters_clause new_initializer_opt 
            {
              Object RESULT =null;
		//@@CUPDBG92

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_expression",29, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // new_type_id ::= type_specifier ptr_operator_seq_opt 
            {
              Object RESULT =null;
		//@@CUPDBG93

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_type_id",30, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // new_type_id ::= type_specifier new_declarator 
            {
              Object RESULT =null;
		//@@CUPDBG94

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_type_id",30, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // new_type_id ::= type_specifier new_type_id 
            {
              Object RESULT =null;
		//@@CUPDBG95

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_type_id",30, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // new_declarator ::= ptr_operator new_declarator 
            {
              Object RESULT =null;
		//@@CUPDBG96

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_declarator",31, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // new_declarator ::= direct_new_declarator 
            {
              Object RESULT =null;
		//@@CUPDBG97

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_declarator",31, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // direct_new_declarator ::= SQLPAREN expression SQRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG98

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("direct_new_declarator",32, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // direct_new_declarator ::= direct_new_declarator SQLPAREN constant_expression SQRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG99

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("direct_new_declarator",32, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // new_initializer_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_initializer_opt",197, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // new_initializer_opt ::= LPAREN expression_list_opt RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG100

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("new_initializer_opt",197, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // cast_expression ::= unary_expression 
            {
              Object RESULT =null;
		//@@CUPDBG101

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("cast_expression",33, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // cast_expression ::= abstract_expression cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG102

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("cast_expression",33, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // pm_expression ::= cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG103

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("pm_expression",34, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // pm_expression ::= pm_expression DOT_STAR cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG104

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("pm_expression",34, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // pm_expression ::= pm_expression ARROW_STAR cast_expression 
            {
              Object RESULT =null;
		//@@CUPDBG105

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("pm_expression",34, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // multiplicative_expression ::= pm_expression 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("multiplicative_expression",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // multiplicative_expression ::= multiplicative_expression star_ptr_operator pm_expression 
            {
              Object RESULT =null;
		//@@CUPDBG106

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("multiplicative_expression",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // multiplicative_expression ::= multiplicative_expression DIVIDE pm_expression 
            {
              Object RESULT =null;
		//@@CUPDBG107

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("multiplicative_expression",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // multiplicative_expression ::= multiplicative_expression PERCENT pm_expression 
            {
              Object RESULT =null;
		//@@CUPDBG108

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("multiplicative_expression",35, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // additive_expression ::= multiplicative_expression 
            {
              Object RESULT =null;
		//@@CUPDBG109

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("additive_expression",36, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // additive_expression ::= additive_expression PLUS multiplicative_expression 
            {
              Object RESULT =null;
		//@@CUPDBG110

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("additive_expression",36, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // additive_expression ::= additive_expression MINUS multiplicative_expression 
            {
              Object RESULT =null;
		//@@CUPDBG111

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("additive_expression",36, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // shift_expression ::= additive_expression 
            {
              Object RESULT =null;
		//@@CUPDBG112

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("shift_expression",121, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // shift_expression ::= shift_expression LEFTSHIFT additive_expression 
            {
              Object RESULT =null;
		//@@CUPDBG113

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("shift_expression",121, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // shift_expression ::= shift_expression RIGHTSHIFT additive_expression 
            {
              Object RESULT =null;
		//@@CUPDBG114

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("shift_expression",121, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // relational_expression ::= shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG115

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("relational_expression",122, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // relational_expression ::= relational_expression SMALLERTHAN shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG116

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("relational_expression",122, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // relational_expression ::= relational_expression GREATERTHAN shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG117

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("relational_expression",122, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // relational_expression ::= relational_expression LE shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG118

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("relational_expression",122, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // relational_expression ::= relational_expression GE shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG119

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("relational_expression",122, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // equality_expression ::= relational_expression 
            {
              Object RESULT =null;
		//@@CUPDBG120

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("equality_expression",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // equality_expression ::= equality_expression EQ relational_expression 
            {
              Object RESULT =null;
		//@@CUPDBG121

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("equality_expression",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // equality_expression ::= equality_expression NE relational_expression 
            {
              Object RESULT =null;
		//@@CUPDBG122

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("equality_expression",39, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // and_expression ::= equality_expression 
            {
              Object RESULT =null;
		//@@CUPDBG123

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("and_expression",40, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // and_expression ::= and_expression AND equality_expression 
            {
              Object RESULT =null;
		//@@CUPDBG124

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("and_expression",40, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // exclusive_or_expression ::= and_expression 
            {
              Object RESULT =null;
		//@@CUPDBG125

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("exclusive_or_expression",41, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // exclusive_or_expression ::= exclusive_or_expression XOR and_expression 
            {
              Object RESULT =null;
		//@@CUPDBG126

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("exclusive_or_expression",41, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // inclusive_or_expression ::= exclusive_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG127

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("inclusive_or_expression",42, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // inclusive_or_expression ::= inclusive_or_expression OR exclusive_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG128

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("inclusive_or_expression",42, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // logical_and_expression ::= inclusive_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG129

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("logical_and_expression",43, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // logical_and_expression ::= logical_and_expression LOG_AND inclusive_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG130

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("logical_and_expression",43, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // logical_or_expression ::= logical_and_expression 
            {
              Object RESULT =null;
		//@@CUPDBG131

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("logical_or_expression",44, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // logical_or_expression ::= logical_or_expression LOG_OR logical_and_expression 
            {
              Object RESULT =null;
		//@@CUPDBG132

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("logical_or_expression",44, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // conditional_expression ::= logical_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG133

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("conditional_expression",45, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // conditional_expression ::= logical_or_expression QM expression COLON assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG134

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("conditional_expression",45, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // assignment_expression ::= conditional_expression 
            {
              Object RESULT =null;
		//@@CUPDBG135

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_expression",46, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // assignment_expression ::= logical_or_expression assignment_operator assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG136

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_expression",46, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // assignment_expression ::= logical_or_expression EQUAL braced_initializer 
            {
              Object RESULT =null;
		//@@CUPDBG137

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_expression",46, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // assignment_expression ::= throw_expression 
            {
              Object RESULT =null;
		//@@CUPDBG138

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_expression",46, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // assignment_operator ::= EQUAL 
            {
              Object RESULT =null;
		//@@CUPDBG139

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // assignment_operator ::= ASS_ADD 
            {
              Object RESULT =null;
		//@@CUPDBG140

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // assignment_operator ::= ASS_AND 
            {
              Object RESULT =null;
		//@@CUPDBG141

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // assignment_operator ::= ASS_DIV 
            {
              Object RESULT =null;
		//@@CUPDBG142

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // assignment_operator ::= ASS_MOD 
            {
              Object RESULT =null;
		//@@CUPDBG143

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // assignment_operator ::= ASS_MUL 
            {
              Object RESULT =null;
		//@@CUPDBG144

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // assignment_operator ::= ASS_OR 
            {
              Object RESULT =null;
		//@@CUPDBG145

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // assignment_operator ::= ASS_SHL 
            {
              Object RESULT =null;
		//@@CUPDBG146

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // assignment_operator ::= ASS_SHR 
            {
              Object RESULT =null;
		//@@CUPDBG147

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // assignment_operator ::= ASS_SUB 
            {
              Object RESULT =null;
		//@@CUPDBG148

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // assignment_operator ::= ASS_XOR 
            {
              Object RESULT =null;
		//@@CUPDBG149

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("assignment_operator",47, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // expression_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expression_opt",200, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // expression_opt ::= expression 
            {
              Object RESULT =null;
		//@@CUPDBG150

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expression_opt",200, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // expression ::= assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG151

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expression",48, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // expression ::= expression_list COMMA assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG152

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("expression",48, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // constant_expression ::= conditional_expression 
            {
              Object RESULT =null;
		//@@CUPDBG153

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("constant_expression",49, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // templated_relational_expression ::= shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG154

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_relational_expression",50, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // templated_relational_expression ::= templated_relational_expression SMALLERTHAN shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG155

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_relational_expression",50, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // templated_relational_expression ::= templated_relational_expression LE shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG156

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_relational_expression",50, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // templated_relational_expression ::= templated_relational_expression GE shift_expression 
            {
              Object RESULT =null;
		//@@CUPDBG157

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_relational_expression",50, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // templated_equality_expression ::= templated_relational_expression 
            {
              Object RESULT =null;
		//@@CUPDBG158

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_equality_expression",51, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // templated_equality_expression ::= templated_equality_expression EQ templated_relational_expression 
            {
              Object RESULT =null;
		//@@CUPDBG159

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_equality_expression",51, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // templated_equality_expression ::= templated_equality_expression NE templated_relational_expression 
            {
              Object RESULT =null;
		//@@CUPDBG160

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_equality_expression",51, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // templated_and_expression ::= templated_equality_expression 
            {
              Object RESULT =null;
		//@@CUPDBG161

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_and_expression",52, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // templated_and_expression ::= templated_and_expression AND templated_equality_expression 
            {
              Object RESULT =null;
		//@@CUPDBG162

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_and_expression",52, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // templated_exclusive_or_expression ::= templated_and_expression 
            {
              Object RESULT =null;
		//@@CUPDBG163

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_exclusive_or_expression",53, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // templated_exclusive_or_expression ::= templated_exclusive_or_expression XOR templated_and_expression 
            {
              Object RESULT =null;
		//@@CUPDBG164

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_exclusive_or_expression",53, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // templated_inclusive_or_expression ::= templated_exclusive_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG165

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_inclusive_or_expression",54, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // templated_inclusive_or_expression ::= templated_inclusive_or_expression OR templated_exclusive_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG166

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_inclusive_or_expression",54, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // templated_logical_and_expression ::= templated_inclusive_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG167

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_logical_and_expression",55, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // templated_logical_and_expression ::= templated_logical_and_expression LOG_AND templated_inclusive_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG168

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_logical_and_expression",55, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // templated_logical_or_expression ::= templated_logical_and_expression 
            {
              Object RESULT =null;
		//@@CUPDBG169

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_logical_or_expression",56, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // templated_logical_or_expression ::= templated_logical_or_expression LOG_OR templated_logical_and_expression 
            {
              Object RESULT =null;
		//@@CUPDBG170

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_logical_or_expression",56, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // templated_conditional_expression ::= templated_logical_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG171

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_conditional_expression",57, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // templated_conditional_expression ::= templated_logical_or_expression QM templated_expression COLON templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG172

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_conditional_expression",57, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // templated_assignment_expression ::= templated_conditional_expression 
            {
              Object RESULT =null;
		//@@CUPDBG173

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_assignment_expression",58, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // templated_assignment_expression ::= templated_logical_or_expression assignment_operator templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG174

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_assignment_expression",58, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // templated_assignment_expression ::= templated_throw_expression 
            {
              Object RESULT =null;
		//@@CUPDBG175

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_assignment_expression",58, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // templated_expression ::= templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG176

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_expression",59, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // templated_expression ::= templated_expression_list COMMA templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG177

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_expression",59, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // templated_expression_list ::= templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG178

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_expression_list",60, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // templated_expression_list ::= templated_expression_list COMMA templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG179

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_expression_list",60, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // looping_statement ::= start_search looped_statement 
            {
              Object RESULT =null;
		//@@CUPDBG180

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looping_statement",61, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // looped_statement ::= statement 
            {
              Object RESULT =null;
		//@@CUPDBG181

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_statement",62, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // looped_statement ::= advance_search PLUS looped_statement 
            {
              Object RESULT =null;
		//@@CUPDBG182

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_statement",62, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // looped_statement ::= advance_search MINUS 
            {
              Object RESULT =null;
		//@@CUPDBG183

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_statement",62, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // statement ::= control_statement 
            {
              Object RESULT =null;
		//@@CUPDBG184

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("statement",63, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // statement ::= compound_statement 
            {
              Object RESULT =null;
		//@@CUPDBG185

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("statement",63, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // statement ::= declaration_statement 
            {
              Object RESULT =null;
		//@@CUPDBG186

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("statement",63, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // statement ::= try_block 
            {
              Object RESULT =null;
		//@@CUPDBG187

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("statement",63, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // control_statement ::= labeled_statement 
            {
              Object RESULT =null;
		//@@CUPDBG188

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("control_statement",64, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // control_statement ::= selection_statement 
            {
              Object RESULT =null;
		//@@CUPDBG189

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("control_statement",64, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // control_statement ::= iteration_statement 
            {
              Object RESULT =null;
		//@@CUPDBG190

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("control_statement",64, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // control_statement ::= jump_statement 
            {
              Object RESULT =null;
		//@@CUPDBG191

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("control_statement",64, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // labeled_statement ::= identifier COLON looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG192

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("labeled_statement",65, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // labeled_statement ::= CASE constant_expression COLON looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG193

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("labeled_statement",65, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // labeled_statement ::= DEFAULT COLON looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG194

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("labeled_statement",65, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // compound_statement ::= CLPAREN statement_seq_opt CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG195

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("compound_statement",66, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // compound_statement ::= CLPAREN statement_seq_opt looping_statement HASHT bang error CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG196

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("compound_statement",66, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // statement_seq_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("statement_seq_opt",201, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // statement_seq_opt ::= statement_seq_opt looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG197

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("statement_seq_opt",201, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // statement_seq_opt ::= statement_seq_opt looping_statement HASHT bang error SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG198

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("statement_seq_opt",201, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // selection_statement ::= IF LPAREN condition RPAREN looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG199

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("selection_statement",67, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // selection_statement ::= IF LPAREN condition RPAREN looping_statement ELSE looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG200

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("selection_statement",67, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // selection_statement ::= SWITCH LPAREN condition RPAREN looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG201

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("selection_statement",67, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // condition_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("condition_opt",202, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // condition_opt ::= condition 
            {
              Object RESULT =null;
		//@@CUPDBG202

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("condition_opt",202, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // condition ::= parameter_declaration_list 
            {
              Object RESULT =null;
		//@@CUPDBG203

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("condition",68, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // iteration_statement ::= WHILE LPAREN condition RPAREN looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG204

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("iteration_statement",69, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // iteration_statement ::= DO looping_statement WHILE LPAREN expression RPAREN SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG205

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("iteration_statement",69, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // iteration_statement ::= FOR LPAREN for_init_statement condition_opt SEMI expression_opt RPAREN looping_statement 
            {
              Object RESULT =null;
		//@@CUPDBG206

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("iteration_statement",69, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // for_init_statement ::= simple_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG207

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("for_init_statement",70, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // jump_statement ::= BREAK SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG208

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("jump_statement",71, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // jump_statement ::= CONTINUE SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG209

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("jump_statement",71, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // jump_statement ::= RETURN expression_opt SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG210

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("jump_statement",71, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // jump_statement ::= GOTO identifier SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG211

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("jump_statement",71, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // declaration_statement ::= block_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG212

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration_statement",72, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // compound_declaration ::= CLPAREN nest declaration_seq_opt CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG213

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("compound_declaration",73, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // compound_declaration ::= CLPAREN nest declaration_seq_opt util looping_declaration HASHT bang error CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG214

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("compound_declaration",73, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-8)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // declaration_seq_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration_seq_opt",203, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // declaration_seq_opt ::= declaration_seq_opt util looping_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG215

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration_seq_opt",203, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // declaration_seq_opt ::= declaration_seq_opt util looping_declaration HASHT bang error SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG216

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration_seq_opt",203, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // looping_declaration ::= start_search1 looped_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG217

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looping_declaration",74, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // looped_declaration ::= declaration 
            {
              Object RESULT =null;
		//@@CUPDBG218

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_declaration",75, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // looped_declaration ::= advance_search PLUS looped_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG219

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_declaration",75, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // looped_declaration ::= advance_search MINUS 
            {
              Object RESULT =null;
		//@@CUPDBG220

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_declaration",75, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // declaration ::= block_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG221

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration",76, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // declaration ::= function_definition 
            {
              Object RESULT =null;
		//@@CUPDBG222

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration",76, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // declaration ::= template_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG223

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration",76, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // declaration ::= explicit_specialization 
            {
              Object RESULT =null;
		//@@CUPDBG224

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration",76, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // declaration ::= specialised_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG225

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("declaration",76, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // specialised_declaration ::= linkage_specification 
            {
              Object RESULT =null;
		//@@CUPDBG226

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("specialised_declaration",77, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // specialised_declaration ::= namespace_definition 
            {
              Object RESULT =null;
		//@@CUPDBG227

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("specialised_declaration",77, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // specialised_declaration ::= TEMPLATE specialised_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG228

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("specialised_declaration",77, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // block_declaration ::= simple_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG229

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("block_declaration",78, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // block_declaration ::= specialised_block_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG230

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("block_declaration",78, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // specialised_block_declaration ::= asm_definition 
            {
              Object RESULT =null;
		//@@CUPDBG231

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("specialised_block_declaration",79, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // specialised_block_declaration ::= namespace_alias_definition 
            {
              Object RESULT =null;
		//@@CUPDBG232

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("specialised_block_declaration",79, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // specialised_block_declaration ::= using_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG233

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("specialised_block_declaration",79, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // specialised_block_declaration ::= using_directive 
            {
              Object RESULT =null;
		//@@CUPDBG234

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("specialised_block_declaration",79, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // specialised_block_declaration ::= TEMPLATE specialised_block_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG235

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("specialised_block_declaration",79, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // simple_declaration ::= SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG236

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_declaration",80, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // simple_declaration ::= init_declaration SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG237

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_declaration",80, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // simple_declaration ::= init_declarations SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG238

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_declaration",80, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // simple_declaration ::= decl_specifier_prefix simple_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG239

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_declaration",80, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // suffix_built_in_decl_specifier_raw ::= built_in_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG240

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_built_in_decl_specifier_raw",207, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // suffix_built_in_decl_specifier_raw ::= suffix_built_in_decl_specifier_raw built_in_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG241

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_built_in_decl_specifier_raw",207, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // suffix_built_in_decl_specifier_raw ::= suffix_built_in_decl_specifier_raw decl_specifier_suffix 
            {
              Object RESULT =null;
		//@@CUPDBG242

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_built_in_decl_specifier_raw",207, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // suffix_built_in_decl_specifier ::= suffix_built_in_decl_specifier_raw 
            {
              Object RESULT =null;
		//@@CUPDBG243

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_built_in_decl_specifier",81, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // suffix_built_in_decl_specifier ::= TEMPLATE suffix_built_in_decl_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG244

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_built_in_decl_specifier",81, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // suffix_named_decl_specifier ::= scoped_id 
            {
              Object RESULT =null;
		//@@CUPDBG245

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifier",82, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // suffix_named_decl_specifier ::= elaborate_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG246

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifier",82, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // suffix_named_decl_specifier ::= suffix_named_decl_specifier decl_specifier_suffix 
            {
              Object RESULT =null;
		//@@CUPDBG247

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifier",82, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // suffix_named_decl_specifier_bi ::= suffix_named_decl_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG248

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifier_bi",208, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // suffix_named_decl_specifier_bi ::= suffix_named_decl_specifier suffix_built_in_decl_specifier_raw 
            {
              Object RESULT =null;
		//@@CUPDBG249

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifier_bi",208, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // suffix_named_decl_specifiers ::= suffix_named_decl_specifier_bi 
            {
              Object RESULT =null;
		//@@CUPDBG250

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifiers",83, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // suffix_named_decl_specifiers ::= suffix_named_decl_specifiers suffix_named_decl_specifier_bi 
            {
              Object RESULT =null;
		//@@CUPDBG251

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifiers",83, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // suffix_named_decl_specifiers_sf ::= scoped_special_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG252

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifiers_sf",209, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // suffix_named_decl_specifiers_sf ::= suffix_named_decl_specifiers 
            {
              Object RESULT =null;
		//@@CUPDBG253

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifiers_sf",209, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // suffix_named_decl_specifiers_sf ::= suffix_named_decl_specifiers scoped_special_function_id 
            {
              Object RESULT =null;
		//@@CUPDBG254

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_named_decl_specifiers_sf",209, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // suffix_decl_specified_ids ::= suffix_built_in_decl_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG255

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_decl_specified_ids",84, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // suffix_decl_specified_ids ::= suffix_built_in_decl_specifier suffix_named_decl_specifiers_sf 
            {
              Object RESULT =null;
		//@@CUPDBG256

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_decl_specified_ids",84, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // suffix_decl_specified_ids ::= suffix_named_decl_specifiers_sf 
            {
              Object RESULT =null;
		//@@CUPDBG257

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_decl_specified_ids",84, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // suffix_decl_specified_scope ::= suffix_named_decl_specifiers SCOPE 
            {
              Object RESULT =null;
		//@@CUPDBG258

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_decl_specified_scope",85, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // suffix_decl_specified_scope ::= suffix_built_in_decl_specifier suffix_named_decl_specifiers SCOPE 
            {
              Object RESULT =null;
		//@@CUPDBG259

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_decl_specified_scope",85, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // suffix_decl_specified_scope ::= suffix_built_in_decl_specifier SCOPE 
            {
              Object RESULT =null;
		//@@CUPDBG260

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("suffix_decl_specified_scope",85, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // decl_specifier_affix ::= storage_class_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG261

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_specifier_affix",86, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // decl_specifier_affix ::= function_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG262

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_specifier_affix",86, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // decl_specifier_affix ::= FRIEND 
            {
              Object RESULT =null;
		//@@CUPDBG263

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_specifier_affix",86, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // decl_specifier_affix ::= TYPEDEF 
            {
              Object RESULT =null;
		//@@CUPDBG264

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_specifier_affix",86, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // decl_specifier_affix ::= cv_qualifier 
            {
              Object RESULT =null;
		//@@CUPDBG265

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_specifier_affix",86, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // decl_specifier_suffix ::= decl_specifier_affix 
            {
              Object RESULT =null;
		//@@CUPDBG266

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_specifier_suffix",87, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // decl_specifier_prefix ::= decl_specifier_affix 
            {
              Object RESULT =null;
		//@@CUPDBG267

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_specifier_prefix",88, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // decl_specifier_prefix ::= TEMPLATE decl_specifier_prefix 
            {
              Object RESULT =null;
		//@@CUPDBG268

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("decl_specifier_prefix",88, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // storage_class_specifier ::= REGISTER 
            {
              Object RESULT =null;
		//@@CUPDBG269

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("storage_class_specifier",89, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // storage_class_specifier ::= STATIC 
            {
              Object RESULT =null;
		//@@CUPDBG270

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("storage_class_specifier",89, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // storage_class_specifier ::= MUTABLE 
            {
              Object RESULT =null;
		//@@CUPDBG271

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("storage_class_specifier",89, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // storage_class_specifier ::= EXTERN 
            {
              Object RESULT =null;
		//@@CUPDBG272

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("storage_class_specifier",89, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // storage_class_specifier ::= AUTO 
            {
              Object RESULT =null;
		//@@CUPDBG273

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("storage_class_specifier",89, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // function_specifier ::= EXPLICIT 
            {
              Object RESULT =null;
		//@@CUPDBG274

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("function_specifier",90, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // function_specifier ::= INLINE 
            {
              Object RESULT =null;
		//@@CUPDBG275

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("function_specifier",90, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // function_specifier ::= VIRTUAL 
            {
              Object RESULT =null;
		//@@CUPDBG276

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("function_specifier",90, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // type_specifier ::= simple_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG277

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type_specifier",91, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // type_specifier ::= elaborate_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG278

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type_specifier",91, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // type_specifier ::= cv_qualifier 
            {
              Object RESULT =null;
		//@@CUPDBG279

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type_specifier",91, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // elaborate_type_specifier ::= class_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG280

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborate_type_specifier",92, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // elaborate_type_specifier ::= enum_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG281

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborate_type_specifier",92, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // elaborate_type_specifier ::= elaborated_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG282

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborate_type_specifier",92, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // elaborate_type_specifier ::= TEMPLATE elaborate_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG283

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborate_type_specifier",92, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // simple_type_specifier ::= scoped_id 
            {
              Object RESULT =null;
		//@@CUPDBG284

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_type_specifier",93, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // simple_type_specifier ::= built_in_type_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG285

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_type_specifier",93, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // built_in_type_specifier ::= CHAR 
            {
              Object RESULT =null;
		//@@CUPDBG286

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // built_in_type_specifier ::= BOOLEAN 
            {
              Object RESULT =null;
		//@@CUPDBG287

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // built_in_type_specifier ::= SHORT 
            {
              Object RESULT =null;
		//@@CUPDBG288

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // built_in_type_specifier ::= INT 
            {
              Object RESULT =null;
		//@@CUPDBG289

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // built_in_type_specifier ::= LONG 
            {
              Object RESULT =null;
		//@@CUPDBG290

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // built_in_type_specifier ::= SIGNED 
            {
              Object RESULT =null;
		//@@CUPDBG291

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // built_in_type_specifier ::= UNSIGNED 
            {
              Object RESULT =null;
		//@@CUPDBG292

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // built_in_type_specifier ::= FLOAT 
            {
              Object RESULT =null;
		//@@CUPDBG293

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // built_in_type_specifier ::= DOUBLE 
            {
              Object RESULT =null;
		//@@CUPDBG294

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action_part00000001(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parser$result;

      /* select the action based on the action number */
      switch (CUP$Parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // built_in_type_specifier ::= VOID 
            {
              Object RESULT =null;
		//@@CUPDBG295

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("built_in_type_specifier",94, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // elaborated_type_specifier ::= elaborated_class_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG296

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborated_type_specifier",95, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // elaborated_type_specifier ::= elaborated_enum_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG297

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborated_type_specifier",95, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // elaborated_type_specifier ::= TYPENAME scoped_id 
            {
              Object RESULT =null;
		//@@CUPDBG298

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborated_type_specifier",95, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // elaborated_enum_specifier ::= ENUM scoped_id 
            {
              Object RESULT =null;
		//@@CUPDBG299

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborated_enum_specifier",96, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // enum_specifier ::= ENUM scoped_id enumerator_clause 
            {
              Object RESULT =null;
		//@@CUPDBG300

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enum_specifier",97, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // enum_specifier ::= ENUM enumerator_clause 
            {
              Object RESULT =null;
		//@@CUPDBG301

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enum_specifier",97, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // enumerator_clause ::= CLPAREN enumerator_list_ecarb 
            {
              Object RESULT =null;
		//@@CUPDBG302

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_clause",98, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // enumerator_clause ::= CLPAREN enumerator_list enumerator_list_ecarb 
            {
              Object RESULT =null;
		//@@CUPDBG303

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_clause",98, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // enumerator_clause ::= CLPAREN enumerator_list COMMA enumerator_definition_ecarb 
            {
              Object RESULT =null;
		//@@CUPDBG304

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_clause",98, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // enumerator_list_ecarb ::= CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG305

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_list_ecarb",99, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // enumerator_list_ecarb ::= bang error CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG306

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_list_ecarb",99, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // enumerator_definition_ecarb ::= CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG307

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_definition_ecarb",100, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // enumerator_definition_ecarb ::= bang error CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG308

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_definition_ecarb",100, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // enumerator_definition_filler ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_definition_filler",101, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // enumerator_definition_filler ::= bang error COMMA 
            {
              Object RESULT =null;
		//@@CUPDBG309

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_definition_filler",101, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // enumerator_list_head ::= enumerator_definition_filler 
            {
              Object RESULT =null;
		//@@CUPDBG310

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_list_head",102, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // enumerator_list_head ::= enumerator_list COMMA enumerator_definition_filler 
            {
              Object RESULT =null;
		//@@CUPDBG311

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_list_head",102, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // enumerator_list ::= enumerator_list_head enumerator_definition 
            {
              Object RESULT =null;
		//@@CUPDBG312

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_list",103, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // enumerator_definition ::= enumerator 
            {
              Object RESULT =null;
		//@@CUPDBG313

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_definition",104, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // enumerator_definition ::= enumerator EQUAL constant_expression 
            {
              Object RESULT =null;
		//@@CUPDBG314

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator_definition",104, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // enumerator ::= identifier 
            {
              Object RESULT =null;
		//@@CUPDBG315

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("enumerator",105, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // namespace_definition ::= NAMESPACE scoped_id compound_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG316

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("namespace_definition",106, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // namespace_definition ::= NAMESPACE compound_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG317

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("namespace_definition",106, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // namespace_alias_definition ::= NAMESPACE scoped_id EQUAL scoped_id SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG318

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("namespace_alias_definition",107, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // using_declaration ::= USING declarator_id SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG319

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("using_declaration",108, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // using_declaration ::= USING TYPENAME declarator_id SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG320

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("using_declaration",108, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // using_directive ::= USING NAMESPACE scoped_id SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG321

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("using_directive",109, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // asm_definition ::= ASM LPAREN string RPAREN SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG322

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("asm_definition",110, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // linkage_specification ::= EXTERN string looping_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG323

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("linkage_specification",111, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // linkage_specification ::= EXTERN string compound_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG324

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("linkage_specification",111, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // init_declarations ::= assignment_expression COMMA init_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG325

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("init_declarations",112, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // init_declarations ::= init_declarations COMMA init_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG326

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("init_declarations",112, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // init_declaration ::= assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG327

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("init_declaration",113, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // star_ptr_operator ::= TIMES 
            {
              Object RESULT =null;
		//@@CUPDBG328

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("star_ptr_operator",114, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // star_ptr_operator ::= star_ptr_operator cv_qualifier 
            {
              Object RESULT =null;
		//@@CUPDBG329

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("star_ptr_operator",114, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // nested_ptr_operator ::= star_ptr_operator 
            {
              Object RESULT =null;
		//@@CUPDBG330

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_ptr_operator",115, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // nested_ptr_operator ::= id_scope nested_ptr_operator 
            {
              Object RESULT =null;
		//@@CUPDBG331

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nested_ptr_operator",115, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ptr_operator ::= AND 
            {
              Object RESULT =null;
		//@@CUPDBG332

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ptr_operator",116, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ptr_operator ::= nested_ptr_operator 
            {
              Object RESULT =null;
		//@@CUPDBG333

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ptr_operator",116, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ptr_operator ::= global_scope nested_ptr_operator 
            {
              Object RESULT =null;
		//@@CUPDBG334

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ptr_operator",116, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ptr_operator_seq ::= ptr_operator 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ptr_operator_seq",117, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ptr_operator_seq ::= ptr_operator ptr_operator_seq 
            {
              Object RESULT =null;
		//@@CUPDBG335

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ptr_operator_seq",117, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ptr_operator_seq_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ptr_operator_seq_opt",198, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ptr_operator_seq_opt ::= ptr_operator ptr_operator_seq_opt 
            {
              Object RESULT =null;
		//@@CUPDBG336

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ptr_operator_seq_opt",198, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // cv_qualifier_seq_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("cv_qualifier_seq_opt",204, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // cv_qualifier_seq_opt ::= cv_qualifier_seq_opt cv_qualifier 
            {
              Object RESULT =null;
		//@@CUPDBG337

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("cv_qualifier_seq_opt",204, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // cv_qualifier ::= CONST 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("cv_qualifier",118, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // cv_qualifier ::= VOLATILE 
            {
              Object RESULT =null;
		//@@CUPDBG338

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("cv_qualifier",118, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // type_id ::= type_specifier abstract_declarator_opt 
            {
              Object RESULT =null;
		//@@CUPDBG339

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type_id",119, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // type_id ::= type_specifier type_id 
            {
              Object RESULT =null;
		//@@CUPDBG340

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type_id",119, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // abstract_declarator_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_declarator_opt",205, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // abstract_declarator_opt ::= ptr_operator abstract_declarator_opt 
            {
              Object RESULT =null;
		//@@CUPDBG341

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_declarator_opt",205, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // abstract_declarator_opt ::= direct_abstract_declarator 
            {
              Object RESULT =null;
		//@@CUPDBG342

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_declarator_opt",205, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // direct_abstract_declarator_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("direct_abstract_declarator_opt",206, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // direct_abstract_declarator_opt ::= direct_abstract_declarator 
            {
              Object RESULT =null;
		//@@CUPDBG343

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("direct_abstract_declarator_opt",206, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // direct_abstract_declarator ::= direct_abstract_declarator_opt parenthesis_clause 
            {
              Object RESULT =null;
		//@@CUPDBG344

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("direct_abstract_declarator",120, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // direct_abstract_declarator ::= direct_abstract_declarator_opt SQLPAREN SQRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG345

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("direct_abstract_declarator",120, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // direct_abstract_declarator ::= direct_abstract_declarator_opt SQLPAREN constant_expression SQRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG346

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("direct_abstract_declarator",120, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // parenthesis_clause ::= parameters_clause cv_qualifier_seq_opt 
            {
              Object RESULT =null;
		//@@CUPDBG347

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parenthesis_clause",123, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // parenthesis_clause ::= parameters_clause cv_qualifier_seq_opt exception_specification 
            {
              Object RESULT =null;
		//@@CUPDBG348

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parenthesis_clause",123, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // parameters_clause ::= LPAREN parameter_declaration_clause RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG349

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameters_clause",124, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // parameter_declaration_clause ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameter_declaration_clause",125, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // parameter_declaration_clause ::= parameter_declaration_list 
            {
              Object RESULT =null;
		//@@CUPDBG350

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameter_declaration_clause",125, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // parameter_declaration_clause ::= parameter_declaration_list ELLIPSIS 
            {
              Object RESULT =null;
		//@@CUPDBG351

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameter_declaration_clause",125, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // parameter_declaration_list ::= parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG352

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameter_declaration_list",126, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // parameter_declaration_list ::= parameter_declaration_list COMMA parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG353

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameter_declaration_list",126, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // abstract_pointer_declaration ::= ptr_operator_seq 
            {
              Object RESULT =null;
		//@@CUPDBG354

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_pointer_declaration",127, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // abstract_pointer_declaration ::= multiplicative_expression star_ptr_operator ptr_operator_seq_opt 
            {
              Object RESULT =null;
		//@@CUPDBG355

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_pointer_declaration",127, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // abstract_parameter_declaration ::= abstract_pointer_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG356

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_parameter_declaration",128, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // abstract_parameter_declaration ::= and_expression AND 
            {
              Object RESULT =null;
		//@@CUPDBG357

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_parameter_declaration",128, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // abstract_parameter_declaration ::= and_expression AND abstract_pointer_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG358

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("abstract_parameter_declaration",128, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // special_parameter_declaration ::= abstract_parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG359

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("special_parameter_declaration",129, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // special_parameter_declaration ::= abstract_parameter_declaration EQUAL assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG360

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("special_parameter_declaration",129, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // special_parameter_declaration ::= ELLIPSIS 
            {
              Object RESULT =null;
		//@@CUPDBG361

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("special_parameter_declaration",129, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // parameter_declaration ::= assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG362

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameter_declaration",130, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // parameter_declaration ::= special_parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG363

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameter_declaration",130, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // parameter_declaration ::= decl_specifier_prefix parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG364

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("parameter_declaration",130, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // templated_parameter_declaration ::= templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG365

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_parameter_declaration",131, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // templated_parameter_declaration ::= templated_abstract_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG366

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_parameter_declaration",131, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // templated_parameter_declaration ::= templated_abstract_declaration EQUAL templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG367

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_parameter_declaration",131, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // templated_parameter_declaration ::= decl_specifier_prefix templated_parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG368

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_parameter_declaration",131, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // templated_abstract_declaration ::= abstract_pointer_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG369

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_abstract_declaration",132, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // templated_abstract_declaration ::= templated_and_expression AND 
            {
              Object RESULT =null;
		//@@CUPDBG370

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_abstract_declaration",132, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // templated_abstract_declaration ::= templated_and_expression AND abstract_pointer_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG371

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_abstract_declaration",132, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // function_definition ::= ctor_definition 
            {
              Object RESULT =null;
		//@@CUPDBG372

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("function_definition",133, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // function_definition ::= func_definition 
            {
              Object RESULT =null;
		//@@CUPDBG373

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("function_definition",133, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // func_definition ::= assignment_expression function_try_block 
            {
              Object RESULT =null;
		//@@CUPDBG374

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("func_definition",134, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // func_definition ::= assignment_expression function_body 
            {
              Object RESULT =null;
		//@@CUPDBG375

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("func_definition",134, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // func_definition ::= decl_specifier_prefix func_definition 
            {
              Object RESULT =null;
		//@@CUPDBG376

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("func_definition",134, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // ctor_definition ::= constructor_head function_try_block 
            {
              Object RESULT =null;
		//@@CUPDBG377

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ctor_definition",135, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // ctor_definition ::= constructor_head function_body 
            {
              Object RESULT =null;
		//@@CUPDBG378

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ctor_definition",135, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // ctor_definition ::= decl_specifier_prefix ctor_definition 
            {
              Object RESULT =null;
		//@@CUPDBG379

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ctor_definition",135, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // constructor_head ::= bit_field_init_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG380

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("constructor_head",136, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // constructor_head ::= constructor_head COMMA assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG381

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("constructor_head",136, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // function_try_block ::= TRY function_block handler_seq 
            {
              Object RESULT =null;
		//@@CUPDBG382

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("function_try_block",137, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // function_block ::= ctor_initializer_opt function_body 
            {
              Object RESULT =null;
		//@@CUPDBG383

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("function_block",138, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // function_body ::= compound_statement 
            {
              Object RESULT =null;
		//@@CUPDBG384

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("function_body",139, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // initializer_clause ::= assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG385

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initializer_clause",140, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // initializer_clause ::= braced_initializer 
            {
              Object RESULT =null;
		//@@CUPDBG386

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initializer_clause",140, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // braced_initializer ::= CLPAREN initializer_list CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG387

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("braced_initializer",141, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // braced_initializer ::= CLPAREN initializer_list COMMA CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG388

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("braced_initializer",141, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // braced_initializer ::= CLPAREN CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG389

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("braced_initializer",141, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // braced_initializer ::= CLPAREN looping_initializer_clause HASHT bang error CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG390

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("braced_initializer",141, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-5)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // braced_initializer ::= CLPAREN initializer_list COMMA looping_initializer_clause HASHT bang error CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG391

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("braced_initializer",141, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // initializer_list ::= looping_initializer_clause 
            {
              Object RESULT =null;
		//@@CUPDBG392

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initializer_list",142, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // initializer_list ::= initializer_list COMMA looping_initializer_clause 
            {
              Object RESULT =null;
		//@@CUPDBG393

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("initializer_list",142, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // looping_initializer_clause ::= start_search looped_initializer_clause 
            {
              Object RESULT =null;
		//@@CUPDBG394

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looping_initializer_clause",143, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // looped_initializer_clause ::= initializer_clause 
            {
              Object RESULT =null;
		//@@CUPDBG395

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_initializer_clause",144, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // looped_initializer_clause ::= advance_search PLUS looped_initializer_clause 
            {
              Object RESULT =null;
		//@@CUPDBG396

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_initializer_clause",144, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // looped_initializer_clause ::= advance_search MINUS 
            {
              Object RESULT =null;
		//@@CUPDBG397

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_initializer_clause",144, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // colon_mark ::= COLON 
            {
              Object RESULT =null;
		//@@CUPDBG398

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("colon_mark",145, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // class_key ::= CLASS 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_key",148, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // class_key ::= STRUCT 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_key",148, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // class_key ::= UNION 
            {
              Object RESULT =null;
		//@@CUPDBG399

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_key",148, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // elaborated_class_specifier ::= class_key scoped_id 
            {
              Object RESULT =null;
		//@@CUPDBG400

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborated_class_specifier",146, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // elaborated_class_specifier ::= class_key scoped_id colon_mark error 
            {
              Object RESULT =null;
		//@@CUPDBG401

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("elaborated_class_specifier",146, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // class_specifier_head ::= class_key scoped_id colon_mark base_specifier_list CLPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG402

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_specifier_head",147, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // class_specifier_head ::= class_key COLON base_specifier_list CLPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG403

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_specifier_head",147, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // class_specifier_head ::= class_key scoped_id CLPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG404

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_specifier_head",147, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // class_specifier_head ::= class_key CLPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG405

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_specifier_head",147, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // class_specifier ::= class_specifier_head member_specification_opt CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG406

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_specifier",149, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // class_specifier ::= class_specifier_head member_specification_opt util looping_member_declaration HASHT bang error CRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG407

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("class_specifier",149, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-7)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // member_specification_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_specification_opt",211, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // member_specification_opt ::= member_specification_opt util looping_member_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG408

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_specification_opt",211, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // member_specification_opt ::= member_specification_opt util looping_member_declaration HASHT bang error SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG409

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_specification_opt",211, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-6)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // looping_member_declaration ::= start_search looped_member_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG410

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looping_member_declaration",150, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // looped_member_declaration ::= member_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG411

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_member_declaration",151, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // looped_member_declaration ::= advance_search PLUS looped_member_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG412

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_member_declaration",151, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // looped_member_declaration ::= advance_search MINUS 
            {
              Object RESULT =null;
		//@@CUPDBG413

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("looped_member_declaration",151, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // member_declaration ::= accessibility_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG414

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_declaration",152, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // member_declaration ::= simple_member_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG415

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_declaration",152, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // member_declaration ::= function_definition 
            {
              Object RESULT =null;
		//@@CUPDBG416

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_declaration",152, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // member_declaration ::= using_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG417

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_declaration",152, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // member_declaration ::= template_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG418

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_declaration",152, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // simple_member_declaration ::= SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG419

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_member_declaration",153, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // simple_member_declaration ::= assignment_expression SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG420

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_member_declaration",153, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // simple_member_declaration ::= constructor_head SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG421

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_member_declaration",153, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // simple_member_declaration ::= member_init_declarations SEMI 
            {
              Object RESULT =null;
		//@@CUPDBG422

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_member_declaration",153, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // simple_member_declaration ::= decl_specifier_prefix simple_member_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG423

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_member_declaration",153, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // member_init_declarations ::= assignment_expression COMMA member_init_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG424

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_init_declarations",154, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // member_init_declarations ::= constructor_head COMMA bit_field_init_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG425

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_init_declarations",154, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // member_init_declarations ::= member_init_declarations COMMA member_init_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG426

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_init_declarations",154, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // member_init_declaration ::= assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG427

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_init_declaration",155, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // member_init_declaration ::= bit_field_init_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG428

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("member_init_declaration",155, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // accessibility_specifier ::= access_specifier COLON 
            {
              Object RESULT =null;
		//@@CUPDBG429

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("accessibility_specifier",156, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // bit_field_declaration ::= assignment_expression COLON bit_field_width 
            {
              Object RESULT =null;
		//@@CUPDBG430

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bit_field_declaration",157, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // bit_field_declaration ::= COLON bit_field_width 
            {
              Object RESULT =null;
		//@@CUPDBG431

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bit_field_declaration",157, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // bit_field_width ::= logical_or_expression 
            {
              Object RESULT =null;
		//@@CUPDBG432

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bit_field_width",158, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // bit_field_width ::= logical_or_expression QM bit_field_width COLON bit_field_width 
            {
              Object RESULT =null;
		//@@CUPDBG433

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bit_field_width",158, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // bit_field_init_declaration ::= bit_field_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG434

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bit_field_init_declaration",159, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // bit_field_init_declaration ::= bit_field_declaration EQUAL initializer_clause 
            {
              Object RESULT =null;
		//@@CUPDBG435

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bit_field_init_declaration",159, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // base_specifier_list ::= base_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG436

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("base_specifier_list",160, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // base_specifier_list ::= base_specifier_list COMMA base_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG437

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("base_specifier_list",160, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // base_specifier ::= scoped_id 
            {
              Object RESULT =null;
		//@@CUPDBG438

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("base_specifier",161, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // base_specifier ::= access_specifier base_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG439

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("base_specifier",161, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // base_specifier ::= VIRTUAL base_specifier 
            {
              Object RESULT =null;
		//@@CUPDBG440

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("base_specifier",161, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // access_specifier ::= PRIVATE 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("access_specifier",162, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // access_specifier ::= PROTECTED 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("access_specifier",162, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // access_specifier ::= PUBLIC 
            {
              Object RESULT =null;
		//@@CUPDBG441

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("access_specifier",162, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // conversion_function_id ::= OPERATOR conversion_type_id 
            {
              Object RESULT =null;
		//@@CUPDBG442

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("conversion_function_id",163, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // conversion_type_id ::= type_specifier ptr_operator_seq_opt 
            {
              Object RESULT =null;
		//@@CUPDBG443

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("conversion_type_id",164, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // conversion_type_id ::= type_specifier conversion_type_id 
            {
              Object RESULT =null;
		//@@CUPDBG444

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("conversion_type_id",164, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // ctor_initializer_opt ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ctor_initializer_opt",210, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // ctor_initializer_opt ::= ctor_initializer 
            {
              Object RESULT =null;
		//@@CUPDBG445

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ctor_initializer_opt",210, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // ctor_initializer ::= COLON mem_initializer_list 
            {
              Object RESULT =null;
		//@@CUPDBG446

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ctor_initializer",165, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // ctor_initializer ::= COLON mem_initializer_list bang error 
            {
              Object RESULT =null;
		//@@CUPDBG447

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("ctor_initializer",165, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // mem_initializer_list ::= mem_initializer 
            {
              Object RESULT =null;
		//@@CUPDBG448

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("mem_initializer_list",166, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // mem_initializer_list ::= mem_initializer_list_head mem_initializer 
            {
              Object RESULT =null;
		//@@CUPDBG449

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("mem_initializer_list",166, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // mem_initializer_list_head ::= mem_initializer_list COMMA 
            {
              Object RESULT =null;
		//@@CUPDBG450

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("mem_initializer_list_head",167, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // mem_initializer_list_head ::= mem_initializer_list bang error COMMA 
            {
              Object RESULT =null;
		//@@CUPDBG451

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("mem_initializer_list_head",167, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // mem_initializer ::= mem_initializer_id LPAREN expression_list_opt RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG452

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("mem_initializer",168, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // mem_initializer_id ::= scoped_id 
            {
              Object RESULT =null;
		//@@CUPDBG453

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("mem_initializer_id",169, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // operator_function_id ::= OPERATOR operator 
            {
              Object RESULT =null;
		//@@CUPDBG454

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator_function_id",170, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // operator ::= NEW 
            {
              Object RESULT =null;
		//@@CUPDBG455

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // operator ::= DELETE 
            {
              Object RESULT =null;
		//@@CUPDBG456

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // operator ::= PLUS 
            {
              Object RESULT =null;
		//@@CUPDBG457

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // operator ::= MINUS 
            {
              Object RESULT =null;
		//@@CUPDBG458

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // operator ::= TIMES 
            {
              Object RESULT =null;
		//@@CUPDBG459

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // operator ::= DIVIDE 
            {
              Object RESULT =null;
		//@@CUPDBG460

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // operator ::= PERCENT 
            {
              Object RESULT =null;
		//@@CUPDBG461

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // operator ::= XOR 
            {
              Object RESULT =null;
		//@@CUPDBG462

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // operator ::= AND 
            {
              Object RESULT =null;
		//@@CUPDBG463

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // operator ::= OR 
            {
              Object RESULT =null;
		//@@CUPDBG464

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // operator ::= SQUIGLY 
            {
              Object RESULT =null;
		//@@CUPDBG465

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // operator ::= ESC 
            {
              Object RESULT =null;
		//@@CUPDBG466

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // operator ::= EQUAL 
            {
              Object RESULT =null;
		//@@CUPDBG467

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // operator ::= SMALLERTHAN 
            {
              Object RESULT =null;
		//@@CUPDBG468

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // operator ::= GREATERTHAN 
            {
              Object RESULT =null;
		//@@CUPDBG469

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // operator ::= ASS_ADD 
            {
              Object RESULT =null;
		//@@CUPDBG470

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // operator ::= ASS_SUB 
            {
              Object RESULT =null;
		//@@CUPDBG471

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // operator ::= ASS_MUL 
            {
              Object RESULT =null;
		//@@CUPDBG472

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // operator ::= ASS_DIV 
            {
              Object RESULT =null;
		//@@CUPDBG473

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // operator ::= ASS_MOD 
            {
              Object RESULT =null;
		//@@CUPDBG474

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // operator ::= ASS_XOR 
            {
              Object RESULT =null;
		//@@CUPDBG475

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // operator ::= ASS_AND 
            {
              Object RESULT =null;
		//@@CUPDBG476

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // operator ::= ASS_OR 
            {
              Object RESULT =null;
		//@@CUPDBG477

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // operator ::= LEFTSHIFT 
            {
              Object RESULT =null;
		//@@CUPDBG478

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // operator ::= RIGHTSHIFT 
            {
              Object RESULT =null;
		//@@CUPDBG479

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // operator ::= ASS_SHR 
            {
              Object RESULT =null;
		//@@CUPDBG480

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // operator ::= ASS_SHL 
            {
              Object RESULT =null;
		//@@CUPDBG481

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // operator ::= EQ 
            {
              Object RESULT =null;
		//@@CUPDBG482

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // operator ::= NE 
            {
              Object RESULT =null;
		//@@CUPDBG483

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // operator ::= LE 
            {
              Object RESULT =null;
		//@@CUPDBG484

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // operator ::= GE 
            {
              Object RESULT =null;
		//@@CUPDBG485

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // operator ::= LOG_AND 
            {
              Object RESULT =null;
		//@@CUPDBG486

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // operator ::= LOG_OR 
            {
              Object RESULT =null;
		//@@CUPDBG487

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // operator ::= INC 
            {
              Object RESULT =null;
		//@@CUPDBG488

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // operator ::= DEC 
            {
              Object RESULT =null;
		//@@CUPDBG489

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // operator ::= COMMA 
            {
              Object RESULT =null;
		//@@CUPDBG490

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // operator ::= ARROW_STAR 
            {
              Object RESULT =null;
		//@@CUPDBG491

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // operator ::= ARROW 
            {
              Object RESULT =null;
		//@@CUPDBG492

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // operator ::= LPAREN RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG493

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // operator ::= SQLPAREN SQRPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG494

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("operator",171, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // template_declaration ::= template_parameter_clause declaration 
            {
              Object RESULT =null;
		//@@CUPDBG495

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_declaration",172, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // template_declaration ::= EXPORT template_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG496

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_declaration",172, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // template_parameter_clause ::= TEMPLATE SMALLERTHAN template_parameter_list GREATERTHAN 
            {
              Object RESULT =null;
		//@@CUPDBG497

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter_clause",173, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // template_parameter_list ::= template_parameter 
            {
              Object RESULT =null;
		//@@CUPDBG498

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter_list",174, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // template_parameter_list ::= template_parameter_list COMMA template_parameter 
            {
              Object RESULT =null;
		//@@CUPDBG499

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter_list",174, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // template_parameter ::= simple_type_parameter 
            {
              Object RESULT =null;
		//@@CUPDBG500

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter",175, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // template_parameter ::= simple_type_parameter EQUAL type_id 
            {
              Object RESULT =null;
		//@@CUPDBG501

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter",175, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // template_parameter ::= templated_type_parameter 
            {
              Object RESULT =null;
		//@@CUPDBG502

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter",175, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // template_parameter ::= templated_type_parameter EQUAL identifier 
            {
              Object RESULT =null;
		//@@CUPDBG503

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter",175, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // template_parameter ::= templated_parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG504

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter",175, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // template_parameter ::= bang error 
            {
              Object RESULT =null;
		//@@CUPDBG505

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_parameter",175, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // simple_type_parameter ::= CLASS 
            {
              Object RESULT =null;
		//@@CUPDBG506

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_type_parameter",176, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // simple_type_parameter ::= TYPENAME 
            {
              Object RESULT =null;
		//@@CUPDBG507

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("simple_type_parameter",176, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // templated_type_parameter ::= template_parameter_clause CLASS 
            {
              Object RESULT =null;
		//@@CUPDBG508

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_type_parameter",177, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // templated_type_parameter ::= template_parameter_clause CLASS identifier 
            {
              Object RESULT =null;
		//@@CUPDBG509

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_type_parameter",177, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // template_id ::= TEMPLATE identifier SMALLERTHAN template_argument_list GREATERTHAN 
            {
              Object RESULT =null;
		//@@CUPDBG510

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_id",178, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // template_id ::= TEMPLATE template_id 
            {
              Object RESULT =null;
		//@@CUPDBG511

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_id",178, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // template_argument_list ::= template_argument 
            {
              Object RESULT =null;
		//@@CUPDBG512

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_argument_list",179, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // template_argument_list ::= template_argument_list COMMA template_argument 
            {
              Object RESULT =null;
		//@@CUPDBG513

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_argument_list",179, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // template_argument ::= templated_parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG514

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("template_argument",180, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // explicit_specialization ::= TEMPLATE SMALLERTHAN GREATERTHAN declaration 
            {
              Object RESULT =null;
		//@@CUPDBG515

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("explicit_specialization",181, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // try_block ::= TRY compound_statement handler_seq 
            {
              Object RESULT =null;
		//@@CUPDBG516

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("try_block",182, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // handler_seq ::= handler 
            {
              Object RESULT =null;
		//@@CUPDBG517

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("handler_seq",183, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // handler_seq ::= handler handler_seq 
            {
              Object RESULT =null;
		//@@CUPDBG518

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("handler_seq",183, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // handler ::= CATCH LPAREN exception_declaration RPAREN compound_statement 
            {
              Object RESULT =null;
		//@@CUPDBG519

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("handler",184, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-4)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // exception_declaration ::= parameter_declaration 
            {
              Object RESULT =null;
		//@@CUPDBG520

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("exception_declaration",185, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // throw_expression ::= THROW 
            {
              Object RESULT =null;
		//@@CUPDBG521

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("throw_expression",186, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // throw_expression ::= THROW assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG522

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("throw_expression",186, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // templated_throw_expression ::= THROW 
            {
              Object RESULT =null;
		//@@CUPDBG523

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_throw_expression",187, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // templated_throw_expression ::= THROW templated_assignment_expression 
            {
              Object RESULT =null;
		//@@CUPDBG524

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("templated_throw_expression",187, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-1)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 544: // exception_specification ::= THROW LPAREN RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG525

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("exception_specification",188, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 545: // exception_specification ::= THROW LPAREN type_id_list RPAREN 
            {
              Object RESULT =null;
		//@@CUPDBG526

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("exception_specification",188, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-3)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 546: // type_id_list ::= type_id 
            {
              Object RESULT =null;
		//@@CUPDBG527

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type_id_list",189, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 547: // type_id_list ::= type_id_list COMMA type_id 
            {
              Object RESULT =null;
		//@@CUPDBG528

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("type_id_list",189, ((java_cup.runtime.Symbol)CUP$Parser$stack.elementAt(CUP$Parser$top-2)), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 548: // advance_search ::= error 
            {
              Object RESULT =null;
		//@@CUPDBG529

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("advance_search",190, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 549: // bang ::= 
            {
              Object RESULT =null;
		//@@CUPDBG530

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("bang",191, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 550: // mark ::= 
            {
              Object RESULT =null;

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("mark",192, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 551: // nest ::= 
            {
              Object RESULT =null;
		//@@CUPDBG531

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("nest",193, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 552: // start_search ::= 
            {
              Object RESULT =null;
		//@@CUPDBG532

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("start_search",194, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 553: // start_search1 ::= 
            {
              Object RESULT =null;
		//@@CUPDBG533

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("start_search1",195, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 554: // util ::= 
            {
              Object RESULT =null;
		//@@CUPDBG534

              CUP$Parser$result = parser.getSymbolFactory().newSymbol("util",196, ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parser$stack.peek()), RESULT);
            }
          return CUP$Parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parser$do_action(
    int                        CUP$Parser$act_num,
    java_cup.runtime.lr_parser CUP$Parser$parser,
    java.util.Stack            CUP$Parser$stack,
    int                        CUP$Parser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$Parser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$Parser$do_action_part00000000(
                               CUP$Parser$act_num,
                               CUP$Parser$parser,
                               CUP$Parser$stack,
                               CUP$Parser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$Parser$do_action_part00000001(
                               CUP$Parser$act_num,
                               CUP$Parser$parser,
                               CUP$Parser$stack,
                               CUP$Parser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
